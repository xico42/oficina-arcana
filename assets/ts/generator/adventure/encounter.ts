import {nd6} from "../dice";

const encounterPlot = [
    'Fúria',
    'Caça',
    'Ferida',
    'Sangue',
    'Coletivo',
    'Insetos',
    'Grande',
    'Forragem',
    'Praga',
    'Território',
    'Emboscada',
    'Raridade',
    'Acasalamento',
    'Rivalidade',
    'Escassez',
    'Migração',
    'Solitário',
    'Dominância',
    'Morte',
    'Comum',
    'Fora de lugar',
    'Augúrio',
    'Instinto',
    'Perseguição',
    'Dificuldade',
    'Esconderijo',
    'Covil',
    'Caverna',
    'Hostilidade',
    'Veneno',
    'Doença',
    'Camuflagem',
    'Sono',
    'Tesouro',
    'Relíquia',
    'Paisagem',
    'Desespero',
    'Clima',
    'Ajuda',
    'Refúgio',
    'Construção',
    'Cultivo',
    'Facção',
    'Salteador',
    'Procurado',
    'Vingança',
    'Carniça',
    'Estranho',
    'Perigo',
    'Ambiente',
    'Escondido',
    'Rastros',
    'Pegadas',
    'Rastejante',
    'Restos',
    'Ossos',
    'Trilha',
    'Passagem',
    'Água',
    'Ar',
    'Terra',
    'Fogo',
    'Aplacado',
    'Bifurcação',
    'Barreira',
    'Armadilha',
    'Corpo',
    'Ponte',
    'Acampamento',
    'Desafio',
    'Cobertura',
    'Poço',
    'Crueldade',
    'Decisão',
    'Profundo',
    'Demarcação',
    'Desvio',
    'Sujeira',
    'Distante',
    'Elevação',
    'Encontro',
    'Medo',
    'Fertilidade',
    'Fruto',
    'Brilho',
    'Minério',
    'Rosnado',
    'Névoa/Poeira',
    'Herbívoro',
    'Carnívoro',
    'Ervas',
    'Lar',
    'Insano',
    'Intimidante',
    'Letal',
    'Trancado',
    'Perdido',
    'Marco',
    'Viagem',
    'Valioso',
    'Monstruoso',
    'Ninho',
    'Místico',
    'Portentoso',
    'Oportunidade',
    'Paradisíaco',
    'Precioso',
    'Rápido',
    'Renegado',
    'Resgate',
    'Ressoante',
    'Recursos',
    'Segredo',
    'Sensação',
    'Grito',
    'Sinais',
    'Inclinação',
    'Cheiro',
    'Súbito',
    'Surpresa',
    'Sobrevivência',
    'Terror',
    'Subterrâneo',
    'Vista',
    'Vulnerável',
    'Útil',
    'Selvagem',
    'Sepultura',
    'Destruição',
    'Mapa',
    'Material',
    'Obstáculo',
    'Barulho',
    'Escalada',
    'Desmoronamento',
    'Abertura',
    'Lápide',
    'Relevo',
    'Buraco',
    'Escavado',
    'Precipício',
    'Plano',
    'Símbolo',
    'Estátua',
    'Caveira',
    'Pequeno',
    'Dejetos',
    'Quebra',
    'Labirinto',
    'Imprevisto',
    'Fosso',
    'Risco',
    'Pedra',
    'Planta',
    'Flor',
    'Beleza',
    'Objeto',
    'Iluminação',
    'Força',
    'Vítima',
    'Alto',
    'Baixo',
    'Isolado',
    'Ninhada',
    'Indício',
    'Massacre',
    'História',
    'Decomposição',
    'Equipamento',
    'Pista',
    'Guia',
    'Navegação',
    'Queda',
    'Natural',
    'Fuga',
    'Curiosidade',
    'Perto',
    'Desastre',
    'Vulto',
    'Ameaça',
    'Asco',
    'Agrupamento',
    'Importante',
    'Perda',
    'Ornamento',
    'Sagrado',
    'Canto',
    'Enxame',
    'Bando',
    'Peculiar',
    'Riqueza',
    'Abandonado',
    'Pilha',
    'Silêncio',
    'Oculto',
    'Velho',
    'Montaria/Veículo',
    'Região',
    'Vento',
    'Condição',
    'Textura',
    'Corrosão/Erosão',
    'Lento',
    'Vestígio',
    'Tragédia',
    'Verme',
    'Preso',
    'Equilíbrio',
    'Aliado',
    'Descoberta',
    'Entrada',
    'Ruína',
    'Tumulto',
    'Necrópole',
    'Fortaleza (e.g. castelo ou quartel)',
    'Diabolismo',
];

const encounterTypes = [
    'Combate',
    'Conhecimento',
    'Recurso',
    'Social',
    'Desafio natural / Clima',
    'Tesouro',
];

const encounterMagnitudes = [
    'Apenas 1',
    '1d6-3 (mínimo de 1)',
    '1d6-1 (mínimo de 1)',
    '1d6',
    '2d6',
    '3d6',
]

interface Encounter {
    plot: string;
    type: string;
    magnitude: string;
}

const randomPlotKey = () => {
    return encounterPlot[Math.floor(Math.random() * encounterPlot.length)];
}

const randomTypeKey = () => {
    return encounterTypes[Math.floor(Math.random() * encounterTypes.length)];
}

const randomMagnitude = () => {
    return encounterMagnitudes[Math.floor(Math.random() * encounterMagnitudes.length)];
}

export const generateEncounter = (): Encounter => {
    return {
        plot: [
            randomPlotKey(),
            randomPlotKey(),
            randomPlotKey(),
        ].join(', '),
        type: randomTypeKey(),
        magnitude: randomMagnitude(),
    };
}